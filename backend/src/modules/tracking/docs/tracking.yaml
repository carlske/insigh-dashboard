/api/auth/register:
  post:
    summary: Register a new user
    tags:
      - Auth
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: carlos@example.com
              password:
                type: string
                example: hyroxStrong123
    responses:
      "201":
        description: User created successfully

/api/auth/login:
  post:
    summary: Login user and get JWT token
    tags:
      - Auth
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: carlos@example.com
              password:
                type: string
                example: hyroxStrong123
    responses:
      "200":
        description: Returns JWT token

/api/auth/logout:
  post:
    summary: Logout user (invalidate token on client)
    description: |
      Since JWTs are stateless, logout is handled client-side by deleting the token.  
      This endpoint only serves as a demo or event logger.
    tags:
      - Auth
    security:
      - bearerAuth: []
    responses:
      "200":
        description: Logout success message

/api/components/track:
  post:
    summary: Register component interaction
    tags:
      - Tracking
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              component:
                type: string
                example: Button
              variant:
                type: string
                example: primary
              action:
                type: string
                example: click
    responses:
      "201":
        description: Created

/api/components/stats:
  get:
    summary: Get basic stats
    tags:
      - Tracking
    responses:
      "200":
        description: OK

/api/components/export:
  get:
    summary: Export tracking (auth required)
    tags:
      - Tracking
    parameters:
      - in: query
        name: format
        schema:
          type: string
          enum: [csv, json]
          example: json
    security:
      - bearerAuth: []
    responses:
      "200":
        description: OK

/api/health:
  get:
    summary: Health check endpoint
    tags:
      - System
    responses:
      "200":
        description: Returns system uptime and OK message
